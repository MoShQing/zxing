package com.shencai.communicationAPI.controller;

import com.shencai.communicationAPI.controllerservice.IDeviceAPIControllerService;
import com.shencai.communicationMange.entity.TOrgcenterTrandevice;
import com.shencai.communicationMange.model.CommonModel;
import com.shencai.communicationMange.model.DeviceListInfoModel;
import com.shencai.fw.common.resolver.RequestJsonParam;
import com.shencai.fw.data.Result;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * 设备管理
 * 
 * @author 
 */
@Controller("deviceManageAPIController")
@RequestMapping("/service/communication/deviceManageAPI")
@Scope("prototype")
public class DeviceManageAPIController {

  @Autowired
  private IDeviceAPIControllerService deviceControllerService;

  /**
   * <b>描述：获取设备信息列表<b>
   * @param queryParams
   * @return
   * @throws Exception
   */
  @RequestMapping("/listTrandevice")
  @ResponseBody
  public Result<List<DeviceListInfoModel>> listTrandevice(String loginName,String password,
      @RequestJsonParam(value = "queryParams", required = false) CommonModel queryParams)
      throws Exception {

    return deviceControllerService.listTrandevice(loginName, password, queryParams);
  }

  /**
   * <b>描述：新增设备<b>
   * @param queryParams
   * @return
   * @throws Exception
   */
  @RequestMapping("/addTrandevice")
  @ResponseBody
  public Result<DeviceListInfoModel> addTrandevice(String loginName,String password,
      @RequestJsonParam(value = "tranDevice", required = false) TOrgcenterTrandevice tranDevice)
      throws Exception {

    return deviceControllerService.saveTrandevice(loginName, password, tranDevice);
  }
  
  /**
   * <b>为设备建立关系</b>
   * @param loginName
   * @param password
   * @param deviceId
   * @return
   * @throws Exception
   */
  @RequestMapping("/saveTranDeviceRelation")
  @ResponseBody
  public Result<Boolean> saveTranDeviceRelation(String loginName,String password, String deviceId)
      throws Exception {
    return deviceControllerService.saveTranDeviceRelation(loginName, password, deviceId);
  }
  
  
  /**
   * <b>描述：修改设备信息<b>
   * @param queryParams
   * @return
   * @throws Exception
   */
  @RequestMapping("/updateTrandevice")
  @ResponseBody
  public Result<Boolean> updateTrandevice(String loginName,String password,
      @RequestJsonParam(value = "tranDevice", required = false) TOrgcenterTrandevice tranDevice)
      throws Exception {

    return deviceControllerService.updateTrandevice(loginName, password, tranDevice);
  }
  
  /**
   * <b>描述：启用 停用设备<b>
   * @param queryParams
   * @return
   * @throws Exception
   */
  @RequestMapping("/updateTrandeviceStatus")
  @ResponseBody
  public Result<Boolean> updateTrandeviceStatus(String loginName,String password,
		  String tranDeviceID, String deviceSysRelationID, int statusCode)
				  throws Exception {
	  
	  return deviceControllerService.updateDeviceStatus(loginName, password, tranDeviceID, deviceSysRelationID, statusCode);
  }
  
  /**
   * <b>描述：获取设备信息及其关系信息<b>
   * @param queryParams
   * @return
   * @throws Exception
   */
  @RequestMapping("/loadTrandeviceInfo")
  @ResponseBody
  public Result<DeviceListInfoModel> loadTrandeviceInfo(String loginName,String password,
		  String tranDeviceID)
				  throws Exception {
	  
	  return deviceControllerService.loadDeviceInfo(loginName, password, tranDeviceID);
  }

  /**
   * <b>描述：第三方系统删除设备</b>
   * @param loginName
   * @param password
   * @param deviceId
   * @return
   * @throws Exception
   */
  @RequestMapping("/removeDeviceByDeviceId")
  @ResponseBody
  public Result<Boolean> removeDeviceByDeviceId(String loginName,String password, String deviceId) throws Exception{
    return deviceControllerService.removeDeviceByDeviceId(loginName, password, deviceId);
  }
}
